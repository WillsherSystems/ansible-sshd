---
- name: Ensure ansible_facts used by role
  ansible.builtin.setup:
    gather_subset: min
  when: not ansible_facts.keys() | list |
    intersect(__sshd_required_facts) == __sshd_required_facts

- name: Ensure correct package manager for ostree systems
  vars:
    ostree_pkg_mgr: ansible.posix.rhel_rpm_ostree
    ostree_booted_file: /run/ostree-booted
  when: ansible_facts.pkg_mgr | d("") != ostree_pkg_mgr
  block:
    - name: Check if system is ostree
      stat:
        path: "{{ ostree_booted_file }}"
      register: __ostree_booted_stat

    - name: Set package manager to use for ostree
      ansible.utils.update_fact:
        updates:
          - path: ansible_facts.pkg_mgr
            value: "{{ ostree_pkg_mgr }}"
      when: __ostree_booted_stat.stat.exists

- name: Set OS dependent variables
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    _distribution_lts_offset: >-
      {{
        ansible_facts['distribution_major_version'] | int % 2
        if ansible_facts['distribution'] == "Ubuntu"
        else 0
      }}
    _distribution_lts_version: >-
      {{
        ansible_facts['distribution_major_version'] | int -
        _distribution_lts_offset | int
        if ansible_facts['distribution'] == "Ubuntu"
        else ansible_facts['distribution_version']
      }}
    params:
      files:
        - "{{ ansible_facts['distribution'] }}_{{ _distribution_lts_version }}.yml"
        - "{{ ansible_facts['os_family'] }}_{{ ansible_facts['distribution_major_version'] }}.yml"
        - "{{ ansible_facts['distribution'] }}.yml"
        - "{{ ansible_facts['os_family'] }}.yml"
        - main.yml  # fallback, vars/main.yml is always loaded by Ansible
      paths:
        - "{{ role_path }}/vars"
        - "{{ playbook_dir }}/vars"
