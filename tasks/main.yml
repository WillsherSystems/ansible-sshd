---
- name: Set OS dependent variables
  include_vars: "{{ item }}"
  with_first_found:
   - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
   - "{{ ansible_distribution }}.yml"
   - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
   - "{{ ansible_os_family }}.yml"
   - default.yml

- name: OS is supported
  assert:
    that: sshd_os_supported == True

- name: Install ssh packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ sshd_packages }}"
  register: ssh_installation

- name: Compute configuration
  set_fact:
    sshd_configuration: "{{ lookup('template', 'sshd_config.j2') }}"

- name: Configuration
  copy:
    content: "{{ sshd_configuration }}"
    dest: "{{ sshd_config_file }}"
    owner: "{{ sshd_config_owner }}"
    group: "{{ sshd_config_group }}"
    mode: "{{ sshd_config_mode }}"
    validate: "{{ sshd_binary }} -t -f %s"
  notify: reload_sshd
  when: not sshd_append_configuration

- name: Remove default configuration
  file:
    path: "{{ sshd_config_file }}"
    state: absent
  when: sshd_append_configuration and ssh_installation | changed

- name: Append configuration
  blockinfile:
    block: "{{ sshd_configuration }}"
    dest: "{{ sshd_config_file }}"
    create: true
    owner: "{{ sshd_config_owner }}"
    group: "{{ sshd_config_group }}"
    mode: "{{ sshd_config_mode }}"
    backup: "{{ sshd_backup }}"
    validate: "{{ sshd_binary }} -t -f %s"
  notify: reload_sshd
  when: sshd_append_configuration

- name: Service enabled and running
  service:
    name: "{{ sshd_service }}"
    enabled: true
    state: started
  when: "sshd_manage_service and ansible_virtualization_type|default(None) != 'docker'"

- name: Register that this role has run
  set_fact: sshd_has_run=true
  when: sshd_has_run is not defined
