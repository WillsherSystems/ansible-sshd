---
- name: Ensure apt sources are up to date on debian systems
  ansible.builtin.apt:
    update_cache: true
  when:
    - ansible_facts['distribution'] == 'Debian'

- name: Ensure correct package manager for ostree systems
  vars:
    ostree_pkg_mgr: ansible.posix.rhel_rpm_ostree
    ostree_booted_file: /run/ostree-booted
  when: ansible_facts.pkg_mgr | d("") != ostree_pkg_mgr
  block:
    - name: Check if system is ostree
      ansible.builtin.stat:
        path: "{{ ostree_booted_file }}"
      register: __ostree_booted_stat

    - name: Set package manager to use for ostree
      ansible.utils.update_fact:
        updates:
          - path: ansible_facts.pkg_mgr
            value: "{{ ostree_pkg_mgr }}"
      when: __ostree_booted_stat.stat.exists

- name: Ensure test users exist on ostree systems
  ansible.builtin.shell: |
    if ! grep -q ^nobody /etc/passwd && grep -q ^nobody /usr/lib/passwd; then
      grep ^nobody /usr/lib/passwd >> /etc/passwd
    fi
    if ! grep -q ^nobody /etc/group && grep -q ^nobody /usr/lib/group; then
      grep ^nobody /usr/lib/group >> /etc/group
    fi
  when: ansible_facts['pkg_mgr'] | d() == "ansible.posix.rhel_rpm_ostree"
  changed_when: true

- name: Make sure openssh is installed before creating backup
  ansible.builtin.package:
    name: openssh-server
    state: present

- name: Make sure openssh has runtime directory on debian
  ansible.builtin.file:
    path: /run/sshd
    state: directory
    owner: root
    group: root
    mode: "0755"
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: Define common variables
  ansible.builtin.set_fact:
    main_sshd_config: /etc/ssh/sshd_config
    main_sshd_config_name: sshd_config
    main_sshd_config_path: /etc/ssh/

- name: Define specific variables
  ansible.builtin.set_fact:
    main_sshd_config: /etc/ssh/sshd_config.d/00-ansible_system_role.conf
    main_sshd_config_name: 00-ansible_system_role.conf
    main_sshd_config_path: /etc/ssh/sshd_config.d/
  when:
    - (ansible_facts['os_family'] == 'RedHat' and ansible_facts['distribution_major_version']|int > 8) or
      (ansible_facts['distribution'] == 'Ubuntu' and ansible_facts['distribution_major_version']|int >= 22)
